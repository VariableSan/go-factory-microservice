admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: auth_service
              domains: ["*"]
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,authorization,x-request-id
                max_age: "1728000"
                expose_headers: x-request-id,grpc-status,grpc-message
              routes:
              # Auth service HTTP routes - direct to auth service
              - match:
                  prefix: "/api/v1/auth"
                route:
                  cluster: auth_service_http
                  timeout: 60s
                  retry_policy:
                    retry_on: "5xx,gateway-error,connect-failure,refused-stream"
                    num_retries: 3
                    retry_back_off:
                      base_interval: 0.1s
                      max_interval: 1s
              
              # Health check route - direct to auth service  
              - match:
                  prefix: "/health"
                route:
                  cluster: auth_service_http
                  timeout: 30s
              
              # gRPC-Web routes for auth service
              - match:
                  prefix: "/auth.v1.AuthService"
                  headers:
                  - name: "content-type"
                    string_match:
                      prefix: "application/grpc-web"
                route:
                  cluster: auth_service_grpc
                  timeout: 60s

  clusters:
  # Auth service HTTP cluster - direct connection
  - name: auth_service_http
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: auth_service_http
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth
                port_value: 8081
    health_checks:
    - timeout: 1s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 3
      http_health_check:
        path: "/health"

  # Auth service gRPC cluster - direct connection
  - name: auth_service_grpc
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: auth_service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth
                port_value: 9090
